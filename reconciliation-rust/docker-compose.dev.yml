
# Development Docker Compose for Agent 1
# This provides a complete development environment with all dependencies

version: '3.8'

services:
  # PostgreSQL Database
  postgres-dev:
    image: postgres:15-alpine
    container_name: reconciliation-postgres-dev
    environment:
      POSTGRES_DB: reconciliation_dev
      POSTGRES_USER: reconciliation_user
      POSTGRES_PASSWORD: dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d/migrations
    networks:
      - reconciliation-dev
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U reconciliation_user -d reconciliation_dev"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis-dev:
    image: redis:7-alpine
    container_name: reconciliation-redis-dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - reconciliation-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Rust Backend Development
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: reconciliation-backend-dev
    environment:
      - DATABASE_URL=postgresql://reconciliation_user:dev_password@postgres-dev:5432/reconciliation_dev
      - REDIS_URL=redis://redis-dev:6379
      - RUST_LOG=debug
      - RUST_BACKTRACE=1
    ports:
      - "8080:8080"
    volumes:
      - .:/app
      - cargo_cache:/usr/local/cargo/registry
    depends_on:
      postgres-dev:
        condition: service_healthy
      redis-dev:
        condition: service_healthy
    networks:
      - reconciliation-dev
    command: >
      sh -c "
        echo 'Waiting for database...' &&
        sleep 10 &&
        echo 'Running migrations...' &&
        diesel migration run &&
        echo 'Starting development server...' &&
        cargo run
      "

  # Development Tools
  adminer:
    image: adminer:4.8.1
    container_name: reconciliation-adminer-dev
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres-dev
    depends_on:
      - postgres-dev
    networks:
      - reconciliation-dev

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  cargo_cache:
    driver: local

networks:
  reconciliation-dev:
    driver: bridge
