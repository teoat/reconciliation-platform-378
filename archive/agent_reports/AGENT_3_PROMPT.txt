You are Agent 3 in a multi-agent development team. Your mission is to complete performance, observability, and documentation tasks.

START PROMPT FOR AGENT 3:

---

You are working as Agent 3 on the reconciliation backend project at /Users/Arief/Desktop/378.

**Project Status**: 6/35 tasks complete (17%)
**Agent 1**: Completing security & authentication
**Agent 2**: Working on testing & API enhancement
**Your Focus**: Performance, Observability & Documentation

**Your 11 tasks**:

### Performance (3 tasks)
1. Optimize database queries
   - Add query execution time logging
   - Identify slow queries (N+1 problems)
   - Add missing indexes
   - Implement query result caching

2. Implement response caching
   - Redis-based response caching for GET endpoints
   - Cache invalidation strategy
   - Add cache headers (ETag, Cache-Control)

3. Add frontend performance monitoring
   - Web Vitals tracking (LCP, FID, CLS)
   - Bundle size monitoring
   - Lighthouse CI integration

### Observability (4 tasks)
4. Enable distributed tracing
   - Integrate OpenTelemetry (already imported)
   - Add Jaeger backend
   - Trace all API calls
   - Add span context propagation

5. Implement structured logging
   - Replace println! with proper logging
   - Add log levels per environment
   - Centralize log format
   - Add request correlation IDs

6. Add custom business metrics
   - Reconciliation job metrics (duration, success rate)
   - User activity metrics
   - API usage metrics
   - Export to Prometheus

7. Configure alerting
   - Set up Prometheus alert rules
   - Configure AlertManager
   - Add Slack/Email notifications
   - Define alert thresholds

### Documentation (5 tasks)
8. Add OpenAPI documentation
   - Generate OpenAPI spec from code
   - Add Swagger UI
   - Document all endpoints
   - Include request/response examples

9. Update README with quick start guide
   - Installation instructions
   - Environment setup
   - Running locally
   - Deployment guide

10. Create architecture diagrams
    - System architecture
    - Database schema
    - API flow diagrams
    - Deployment architecture

11. Add deployment runbook
    - Production deployment steps
    - Rollback procedures
    - Health check procedures
    - Troubleshooting guide

12. Create troubleshooting guide
    - Common issues & solutions
    - Debug procedures
    - Performance tuning
    - Security incident response

**Priority**: LOW-MEDIUM
**Estimated Time**: 6-8 hours
**Dependencies**: Agent 1 & 2 completion

**Start Instructions**:
1. Read `AGENT_DIVISION_TASKS.md` for context
2. Review existing docs in `docs/` directory
3. Start with performance optimizations
4. Update TODO status as you progress
5. Create completion report: `AGENT_3_COMPLETION_REPORT.md`

**Key Files**:
- Performance: `backend/src/services/performance.rs`
- Tracing: `backend/src/middleware/distributed_tracing.rs`
- Monitoring: `backend/src/monitoring.rs`
- Docs: `docs/`

**Resources**:
- OpenTelemetry: Already in Cargo.toml
- Prometheus: Already configured
- Grafana: Already set up in docker-compose.yml

**Questions?** Refer to `COMPREHENSIVE_DEEP_ANALYSIS_AND_TODOS.md`

---

END PROMPT FOR AGENT 3
