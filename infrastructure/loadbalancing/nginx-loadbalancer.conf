# Nginx Load Balancer Configuration
# This configuration implements load balancing and auto-scaling for the Reconciliation Platform

# Upstream backend servers
upstream reconciliation_backend {
    # Backend servers
    server backend-1:2000 weight=3 max_fails=3 fail_timeout=30s;
    server backend-2:2000 weight=3 max_fails=3 fail_timeout=30s;
    server backend-3:2000 weight=2 max_fails=3 fail_timeout=30s;
    
    # Load balancing method
    least_conn;
    
    # Health check
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
}

# Upstream frontend servers
upstream reconciliation_frontend {
    # Frontend servers
    server frontend-1:80 weight=2 max_fails=3 fail_timeout=30s;
    server frontend-2:80 weight=2 max_fails=3 fail_timeout=30s;
    server frontend-3:80 weight=1 max_fails=3 fail_timeout=30s;
    
    # Load balancing method
    ip_hash;
    
    # Health check
    keepalive 16;
    keepalive_requests 50;
    keepalive_timeout 30s;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api:10m rate=100r/s;
limit_req_zone $binary_remote_addr zone=auth:10m rate=20r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=static:10m rate=200r/s;

# Connection limiting
limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
limit_conn_zone $server_name zone=conn_limit_per_server:10m;

# Cache zones
proxy_cache_path /var/cache/nginx/api levels=1:2 keys_zone=api_cache:10m max_size=1g inactive=60m use_temp_path=off;
proxy_cache_path /var/cache/nginx/static levels=1:2 keys_zone=static_cache:10m max_size=2g inactive=24h use_temp_path=off;

# Main server block
server {
    listen 80;
    server_name reconciliation-platform.com www.reconciliation-platform.com;
    
    # Redirect HTTP to HTTPS
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl http2;
    server_name reconciliation-platform.com www.reconciliation-platform.com;
    
    # SSL configuration
    ssl_certificate /etc/nginx/ssl/reconciliation-platform.crt;
    ssl_certificate_key /etc/nginx/ssl/reconciliation-platform.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers on;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Connection limits
    limit_conn conn_limit_per_ip 50;
    limit_conn conn_limit_per_server 2000;
    
    # Frontend routes
    location / {
        # Rate limiting
        limit_req zone=static burst=100 nodelay;
        
        # Proxy to frontend servers
        proxy_pass http://reconciliation_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache static assets
        proxy_cache static_cache;
        proxy_cache_valid 200 1h;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 10s;
        proxy_read_timeout 10s;
    }
    
    # API routes with load balancing
    location /api/ {
        # Rate limiting
        limit_req zone=api burst=50 nodelay;
        
        # Proxy to backend servers
        proxy_pass http://reconciliation_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache API responses
        proxy_cache api_cache;
        proxy_cache_valid 200 5m;
        proxy_cache_valid 404 1m;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Timeouts
        proxy_connect_timeout 10s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Retry configuration
        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
        proxy_next_upstream_timeout 10s;
    }
    
    # Authentication endpoints with stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth burst=20 nodelay;
        
        proxy_pass http://reconciliation_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # No caching for auth endpoints
        proxy_cache off;
        
        # Timeouts
        proxy_connect_timeout 5s;
        proxy_send_timeout 15s;
        proxy_read_timeout 15s;
    }
    
    # File upload endpoints
    location /api/upload/ {
        limit_req zone=upload burst=10 nodelay;
        
        proxy_pass http://reconciliation_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Upload specific settings
        client_max_body_size 10m;
        proxy_request_buffering off;
        proxy_read_timeout 300s;
        proxy_send_timeout 300s;
    }
    
    # Health check endpoints
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }
    
    # Load balancer status
    location /nginx_status {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
    }
    
    # Metrics endpoint
    location /metrics {
        allow 127.0.0.1;
        allow 10.0.0.0/8;
        allow 172.16.0.0/12;
        allow 192.168.0.0/16;
        deny all;
        
        proxy_pass http://reconciliation_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static assets caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        limit_req zone=static burst=200 nodelay;
        
        proxy_pass http://reconciliation_frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Long-term caching
        proxy_cache static_cache;
        proxy_cache_valid 200 1y;
        proxy_cache_valid 404 1h;
        proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
        proxy_cache_lock on;
        
        # Cache headers
        add_header Cache-Control "public, immutable";
        expires 1y;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /404.html {
        root /usr/share/nginx/html;
        internal;
    }
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}

# Auto-scaling configuration
# This would typically be handled by Kubernetes HPA or Docker Swarm
# But we can configure Nginx to handle dynamic upstreams

# Dynamic upstream configuration (requires nginx-plus or custom module)
# upstream_conf {
#     server reconciliation_backend;
# }
