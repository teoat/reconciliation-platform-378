name: Performance Monitoring

on:
  schedule:
    - cron: '0 4 * * *' # Daily at 4 AM
  workflow_dispatch:

jobs:
  performance-test:
    name: Performance Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build application
      run: npm run build

    - name: Start application
      run: npm run start &
      env:
        PORT: 3000

    - name: Wait for application
      run: npx wait-on http://localhost:3000

    - name: Run Lighthouse CI
      run: |
        npm install -g @lhci/cli@0.12.x
        lhci autorun

    - name: Upload Lighthouse results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: lighthouse-results
        path: .lighthouseci/
        retention-days: 30

    - name: Run WebPageTest
      uses: WebPageTest/webpagetest-action@v1
      with:
        apiKey: ${{ secrets.WEBPAGETEST_API_KEY }}
        url: http://localhost:3000
        location: 'Dulles:Chrome'
        runs: 3
        firstViewOnly: false
        video: true

    - name: Comment PR with performance results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          // Read Lighthouse results
          const lighthouseResults = fs.readFileSync('.lighthouseci/results.json', 'utf8');
          const results = JSON.parse(lighthouseResults);
          
          const comment = `## Performance Test Results
          
          ### Lighthouse Scores
          - **Performance**: ${results.lhr.categories.performance.score * 100}
          - **Accessibility**: ${results.lhr.categories.accessibility.score * 100}
          - **Best Practices**: ${results.lhr.categories['best-practices'].score * 100}
          - **SEO**: ${results.lhr.categories.seo.score * 100}
          
          ### Core Web Vitals
          - **LCP**: ${results.lhr.audits['largest-contentful-paint'].displayValue}
          - **FID**: ${results.lhr.audits['max-potential-fid'].displayValue}
          - **CLS**: ${results.lhr.audits['cumulative-layout-shift'].displayValue}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

